import React, { useState, useEffect, useContext } from "react";
import { useRouter } from "next/router";
import Image from "next/image";
import Link from "next/link";
import Head from 'next/head'
import Swal from "sweetalert2";
import { TokenContext } from "../utils/context";

function Login() {
    const { token, setToken } = useContext(TokenContext);
    const router = useRouter();
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [isEmailError, setIsEmailError] = useState(false)
    const [isPwdError, setIsPwdError] = useState(false)
    const [loading, setLoading] = useState(false);

    const handleChange = (e, type) => {
        const value = e.target.value
        if (type === "email") {
            setEmail(value)
            setIsEmailError(false)
        } else {
            setPassword(value)
            setIsPwdError(false)
        }
    }

    const postLogin = () => {
        Swal.fire({
            title: 'Failed to Login!',
            text: 'Please check your email and password Again',
            icon: 'error',
            confirmButtonClass: "bg-sky-500",
            confirmButtonText: 'Ok'
            })
        // const body = {
        //     email,
        //     password,
        // };
        // var requestOptions = {
        //     method: "POST",
        //     headers: { "Content-Type": "application/json" },
        //     body: JSON.stringify(body),
        // };
        // fetch(
        //     "https://my-json-server.typicode.com/Maruta45/mockjson/auth",
        //     requestOptions
        // )
        // .then((response) => response.json())
        // .then((result) => {
        //     const { code, message, data } = result;
        //     if (code === 200) {
        //         // const { token } = data;
        //         // localStorage.setItem("token", token);
        //         // setToken(token);
        //         // router.push("/");
        //     }
        //     // alert(message);
        // })
        // .catch((err) => {
        //     alert(err.toString());
        // })
        // .finally(() => setLoading(false));
    }

    const handleSubmit = async () => {
        const re = /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/g;
        let passed = 0

        if (re.test(email)) {
            passed+=1
        } else {
            setIsEmailError(true)
        }

        if (password !== '') {
            passed+=1
        } else {
            setIsPwdError(true)
        }

        if (passed === 2) {
            postLogin()
        }
    };
    
    if (token !== "0") {
        router.push("/");
    } else {
        return (
            <div>
                <Head>
                    <title>Login</title>
                    <link rel="icon" href="/favicon.ico" />
                    <meta name="description" content="Generated by create next app" />
                    <meta charset="utf-8" />
                    <meta name="viewport" content="width=device-width, initial-scale=1" />
                    <meta name="theme-color" content="#000000" />
                    <meta name="description" content="Web site created using create-react-app" />
                </Head>
                <div className="flex min-h-screen w-screen">
                    <div className="basis-1/2 relative">
                        <Image
                            src="http://source.unsplash.com/74tlEYKgrBE"
                            alt="shit"
                            layout='fill'
                            objectFit='cover'
                            objectPosition='center'
                        />
                    </div>
                    <div className="basis-1/2 flex justify-center items-center">
                        <div className="text-center flex flex-col gap-10">
                            <p className="font-bold text-4xl">
                                Login
                            </p>
                            <div className="text-right flex flex-col gap-4">
                                <div>
                                    <span className="mr-4">Email</span>
                                    <input type={"text"} value={email} onChange={(e) => handleChange(e, 'email')} className="border-[0.1rem] rounded p-2" placeholder="email@mail.com"></input>
                                    {isEmailError && <p className='text-xs text-red-600'>*Please check your email again</p>}
                                </div>
                                <div>
                                    <span className="mr-4">Password</span>
                                    <input type={"password"} className="border-[0.1rem] rounded p-2" onChange={(e) => handleChange(e, 'password')} placeholder="*********"></input>
                                    {isPwdError && <p className='text-xs text-red-600'>*Please check your password again</p>}
                                </div>
                            </div>
                            <button className="font-bold py-2 px-20 bg-sky-500 hover:bg-sky-700 text-white rounded" onClick={() => handleSubmit()}>Login</button>
                            <p className="text-sky-500">
                                <span className="text-black">Doesnâ€™t have an account?</span> <Link href={'/'}>Sign up</Link>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        )
    }
}
export default Login