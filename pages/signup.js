import React, { useState, useEffect, useContext } from "react";
import { useRouter } from "next/router";
import Image from "next/image";
import Link from "next/link";
import Head from 'next/head'
import Lottie from 'lottie-react';
import PlayMusic from '../assets/animations/5853-play-music.json'
import Swal from "sweetalert2";
import { TokenContext } from "../utils/context";

function Signup() {
    const { token, setToken } = useContext(TokenContext);
    const router = useRouter();
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [name,setName] = useState("")
    const [isNameError, setIsNameError] = useState(false)
    const [isEmailError, setIsEmailError] = useState(false)
    const [isPwdError, setIsPwdError] = useState(false)
    const [loading, setLoading] = useState(false);

    const handleChange = (e, type) => {
        const value = e.target.value
        if (type === "email") {
            setEmail(value)
            setIsEmailError(false)
        } else if (type === "name"){
            setName(value)
            setIsNameError(false)
        } else {
            setPassword(value)
            setIsPwdError(false)
        }
    }

    const postLogin = () => {
        const body = {
            name,
            email,
            password,
        };
        var requestOptions = {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(body),
        };
        fetch(
            "https://my-json-server.typicode.com/Maruta45/mockjson/register",
            requestOptions
        )
        .then((response) => response.json())
        .then((result) => {
            const { code, message } = result;
            if (code === 200) {
                Swal.fire({
                    icon: 'Success',
                    title: message
                });
            } else if (code === 400) {
                Swal.fire({
                    icon: 'error',
                    title: message
                });
            }
        })
        .catch((err) => {
            console.log(err)
        })
        .finally(() => {
            setLoading(false)
        });
    }

    const handleSubmit = async () => {
        const re = /^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/g;
        let passed = 0

        re.test(email) ? passed+=1 : setIsEmailError(true)
        password!=='' ? passed+=1 : setIsPwdError(true)
        name!=='' ? passed+=1 : setIsNameError(true)

        if (passed === 3) {
            setLoading(true)
            postLogin()
        }
    };
    
    if (token !== "0") {
        router.push("/");
    } else {
        if (loading) {
            return (
                <div>
                    <Head>
                        <title>Login</title>
                        <link rel="icon" href="/favicon.ico" />
                        <meta name="description" content="Generated by create next app" />
                        <meta charset="utf-8" />
                        <meta name="viewport" content="width=device-width, initial-scale=1" />
                        <meta name="theme-color" content="#000000" />
                        <meta name="description" content="Web site created using create-react-app" />
                    </Head>
                    <div className="w-screen h-screen flex justify-center items-center">
                        <Lottie autoPlay loop={true} animationData={PlayMusic} className='w-72' />
                    </div>
                </div>
            )
        } else {
            return (
                <div>
                    <Head>
                        <title>Login</title>
                        <link rel="icon" href="/favicon.ico" />
                        <meta name="description" content="Generated by create next app" />
                        <meta charset="utf-8" />
                        <meta name="viewport" content="width=device-width, initial-scale=1" />
                        <meta name="theme-color" content="#000000" />
                        <meta name="description" content="Web site created using create-react-app" />
                    </Head>
                    <div className="flex flex-col xl:flex-row min-h-screen w-screen">
                        <div className="xl:basis-1/2 relative h-[20vh] xl:h-screen">
                            <Image
                                src="http://source.unsplash.com/74tlEYKgrBE"
                                alt="shit"
                                layout='fill'
                                objectFit='cover'
                                objectPosition='center'
                            />
                        </div>
                        <div className="basis-1/2 flex justify-center items-center">
                            <div className="flex flex-col gap-10">
                                <p className="font-bold text-4xl text-center">
                                    <div className="text-left font-bold -skew-y-6 text-sky-500 italic my-3 cursor-pointer text-2xl">
                                        <Link href={'/'}>SOUNDFEST</Link>
                                    </div>
                                    Sign Up
                                </p>
                                <div className="text-right flex flex-col gap-4">
                                    <div>
                                        <span className="mr-4">Name</span>
                                        <input type={"text"} value={name} onChange={(e) => handleChange(e, 'name')} className="border-[0.1rem] rounded p-2" placeholder="name"></input>
                                        {isNameError && <p className='text-xs text-red-600'>*Please check your name again</p>}
                                    </div>
                                    <div>
                                        <span className="mr-4">Email</span>
                                        <input type={"text"} value={email} onChange={(e) => handleChange(e, 'email')} className="border-[0.1rem] rounded p-2" placeholder="email@mail.com"></input>
                                        {isEmailError && <p className='text-xs text-red-600'>*Please check your email again</p>}
                                    </div>
                                    <div>
                                        <span className="mr-4">Password</span>
                                        <input type={"password"} value={password} className="border-[0.1rem] rounded p-2" onChange={(e) => handleChange(e, 'password')} placeholder="*********"></input>
                                        {isPwdError && <p className='text-xs text-red-600'>*Please check your password again</p>}
                                    </div>
                                </div>
                                <button className="font-bold py-2 px-20 bg-sky-500 hover:bg-sky-700 text-white rounded" onClick={() => handleSubmit()}>Sign Up</button>
                                <p className="text-sky-500 text-center">
                                    <span className="text-black">Already have an account?</span> <Link href={'/login'}>Login</Link>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            )
        }
    }
}
export default Signup